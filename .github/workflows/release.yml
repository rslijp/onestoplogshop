# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  VERSION: '${{github.ref_name}}.${{ github.run_number }}'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Main checkout
        uses: actions/checkout@v3

      - name: Switch to node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Test with Maven
        run: mvn -Pdevelopment clean install

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/target/surefire-reports/TEST-*.xml"

      # Runs a set of commands using the runners shell
      - name: Set version
        run: |
          mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ env.VERSION }}

      - name: Build release
        run: mvn clean install -DskipTest=true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Release ${{ env.VERSION }}
          draft: false
          prerelease: true

      - name: Upload release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'web/target/web-${{ env.VERSION }}.jar'
          release_id: ${{ steps.create_release.outputs.id }}
          overwrite: true
          draft: false
          prerelease: true
          verbose: true

      - name: Prepare build docker image
        run: cp web/target/web-*.jar docker

      - name: Install docker tool
        uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12

      - name: Build docker image
        run: |
           docker build -f docker/onestoplogshop-web-dockerfile --build-arg version=${{ env.VERSION }} -t ghcr.io/rslijp/onestoplogshop:${{ env.VERSION }} -t ghcr.io/rslijp/onestoplogshop:latest ./docker/
           echo $GITHUB_TOKEN | docker login ghcr.io -u USERNAME --password-stdin
           docker image ls
           docker push ghcr.io/rslijp/onestoplogshop:latest
           docker push ghcr.io/rslijp/onestoplogshop:${{ env.VERSION }}